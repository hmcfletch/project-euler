# Pentagonal numbers are generated by the formula, P_n=n(3n−1)/2. The
# first ten pentagonal numbers are:
#
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their
# difference, 70 − 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum
# and difference are pentagonal and D = |Pk − Pj| is minimised; what
# is the value of D?

def pentagonal_number(n)
  n * (3 * n - 1) / 2
end

MAX_PENT_NUM = 1_000_000

PENT_NUMS = (1..MAX_PENT_NUM).collect { |i| pentagonal_number(i) }.freeze
PENT_NUMS_MAP = Hash[(1..MAX_PENT_NUM).collect { |i| [PENT_NUMS[i - 1], i] }]

MAX_NUM = 10_000

(1..MAX_NUM).each do |j|
  (1..MAX_NUM).each do |k|
    pj = PENT_NUMS[j - 1]
    pk = PENT_NUMS[k - 1]

    sum = pk + pj
    diff = (pk - pj).abs

    next unless PENT_NUMS_MAP.key?(sum) && PENT_NUMS_MAP.key?(diff)

    puts "{#{j}, #{k}} => {#{pj}, #{pk}} => #{sum} (#{PENT_NUMS_MAP[sum]}) => #{diff} (#{PENT_NUMS_MAP[diff]})"
  end
end
